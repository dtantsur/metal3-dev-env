{% set lvars = { 'host_ip' : 'NOTSET', 'pxe_network' : False} %}
{% for network in networks %}
  {% if (not (network.forward_mode is defined and network.forward_mode == 'nat') and lvars['pxe_network'] == False) %}
    {% if lvars.update({'pxe_network' : network.name}) %}{% endif %}
  {% endif %}
  {% if network.address_v4 is defined and network.address_v4 != '' and lvars['host_ip'] == 'NOTSET' %}
    {% if lvars.update({'host_ip' : network.address_v4}) %}{% endif %}
  {% endif %}
  {% if network.address_v6 is defined and network.address_v6 != '' and lvars['host_ip'] == 'NOTSET' %}
    {% if lvars.update({'host_ip' : network.address_v6}) %}{% endif %}
  {% endif %}
{% endfor %}
{
  "nodes": [
  {% for node in vm_nodes %}
    {
      "name": "{{ node.name|replace('_', '-') }}",
      "driver": "{{ vm_driver }}",
      "resource_class": "baremetal",
      "driver_info": {
        {% if nodes_json_format == 'ironic' -%}
          {% if vm_driver == 'redfish' -%}
          "redfish_username": "admin",
          "redfish_password": "password",
          "redfish_address": "http://{{ lvars['host_ip'] }}:8000",
          "redfish_system_id": "/redfish/v1/Systems/{{vm_id[node.name]}}",
          {% else -%}
          "ipmi_username": "admin",
          "ipmi_password": "password",
          "ipmi_port": "{{ node.virtualbmc_port }}",
          "ipmi_address": "{{lvars['host_ip']}}",
          {% endif -%}
        {% else -%}
          "username": "admin",
          "password": "password",
          {% if vm_driver =='redfish' -%}
          "port": "8000",
          "address": "{{vm_driver}}+http://{{ lvars['host_ip'] | ipwrap }}:8000/redfish/v1/Systems/{{vm_id[node.name]}}",
          {% else -%}
          "port": "{{ node.virtualbmc_port }}",
          "address": "{{vm_driver}}://{{lvars['host_ip'] | ipwrap }}:{{node.virtualbmc_port}}",
          {% endif -%}
        {% endif -%}
        "deploy_kernel": "http://{{ provisioning_url_host }}/images/ironic-python-agent.kernel",
        "deploy_ramdisk": "http://{{ provisioning_url_host }}/images/ironic-python-agent.initramfs"
      },
      "ports": [{
        "address": "{{ node_mac_map.get(node.name).get(lvars['pxe_network']) }}",
        "pxe_enabled": true
      }],
      "properties": {
        "local_gb": "{{ flavors[node.flavor].disk }}",
        "cpu_arch": "{{ libvirt_arch }}"
      }
    }
    {% if not loop.last %}
    ,
    {% endif %}
  {% endfor %}
  ]
}
